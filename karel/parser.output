   0  $accept : %entry% $end

   1  prog : begin_programm lst_define adresse BEGIN_EXEC stmts_opt END_EXEC END_PROG

   2  begin_programm : BEGIN_PROG

   3  stmts_opt :
   4            | stmts

   5  stmts : block
   6        | stmts SEMI block
   7        | stmts SEMI

   8  stmt : simple_stmt
   9       | ITERATE iterate_int TIMES goto_block
  10       | WHILE adresse gen_test DO goto_block
  11       | IF gen_test THEN block
  12       | IF gen_test THEN goto_inside_block ELSE adresse block

  13  define_new : adresse DEFINE_NEW_INSTRUCTION ID AS block

  14  lst_define :
  15             | lst_define define_new
  16             | lst_define define_new SEMI

  17  block : BEGIN stmts_opt END
  18        | stmt

  19  inside_block : BEGIN stmts_opt END
  20               | inside_stmt

  21  inside_stmt : simple_stmt
  22              | IF gen_test THEN goto_inside_block ELSE adresse inside_block
  23              | WHILE adresse gen_test DO goto_inside_block
  24              | ITERATE iterate_int TIMES goto_inside_block

  25  simple_stmt : TURN_LEFT
  26              | TURN_OFF
  27              | MOVE
  28              | PICK_BEEPER
  29              | PUT_BEEPER
  30              | ID

  31  test : FRONT_IS_CLEAR
  32       | FRONT_IS_BLOCKED
  33       | LEFT_IS_CLEAR
  34       | LEFT_IS_BLOCKED
  35       | RIGHT_IS_CLEAR
  36       | RIGHT_IS_BLOCKED
  37       | NOT_NEXT_TO_A_BEEPER
  38       | NEXT_TO_A_BEEPER
  39       | FACING_NORTH
  40       | NOT_FACING_NORTH
  41       | FACING_EAST
  42       | NOT_FACING_EAST
  43       | FACING_SOUTH
  44       | NOT_FACING_SOUTH
  45       | FACING_WEST
  46       | NOT_FACING_WEST
  47       | ANY_BEEPERS_IN_BEEPER_BAG
  48       | NO_BEEPERS_IN_BEEPER_BAG

  49  gen_test : test

  50  goto_block : block

  51  goto_inside_block : inside_block

  52  iterate_int : INT

  53  adresse :

  54  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (54)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4
	begin_programm  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	begin_programm : BEGIN_PROG .  (2)

	.  reduce 2


state 4
	%entry% : '\001' prog .  (54)

	.  reduce 54


state 5
	prog : begin_programm . lst_define adresse BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	lst_define : .  (14)

	.  reduce 14

	lst_define  goto 6


state 6
	prog : begin_programm lst_define . adresse BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	lst_define : lst_define . define_new  (15)
	lst_define : lst_define . define_new SEMI  (16)
	adresse : .  (53)

	.  reduce 53

	adresse  goto 7
	define_new  goto 8


state 7
	prog : begin_programm lst_define adresse . BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	define_new : adresse . DEFINE_NEW_INSTRUCTION ID AS block  (13)

	BEGIN_EXEC  shift 9
	DEFINE_NEW_INSTRUCTION  shift 10
	.  error


state 8
	lst_define : lst_define define_new .  (15)
	lst_define : lst_define define_new . SEMI  (16)

	SEMI  shift 11
	BEGIN_EXEC  reduce 15
	DEFINE_NEW_INSTRUCTION  reduce 15


state 9
	prog : begin_programm lst_define adresse BEGIN_EXEC . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (3)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END_EXEC  reduce 3

	stmts_opt  goto 22
	stmts  goto 23
	block  goto 24
	stmt  goto 25
	simple_stmt  goto 26


state 10
	define_new : adresse DEFINE_NEW_INSTRUCTION . ID AS block  (13)

	ID  shift 27
	.  error


state 11
	lst_define : lst_define define_new SEMI .  (16)

	.  reduce 16


state 12
	simple_stmt : MOVE .  (27)

	.  reduce 27


state 13
	simple_stmt : TURN_LEFT .  (25)

	.  reduce 25


state 14
	simple_stmt : TURN_OFF .  (26)

	.  reduce 26


state 15
	block : BEGIN . stmts_opt END  (17)
	stmts_opt : .  (3)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END  reduce 3

	stmts_opt  goto 28
	stmts  goto 23
	block  goto 24
	stmt  goto 25
	simple_stmt  goto 26


state 16
	simple_stmt : PICK_BEEPER .  (28)

	.  reduce 28


state 17
	simple_stmt : PUT_BEEPER .  (29)

	.  reduce 29


state 18
	stmt : ITERATE . iterate_int TIMES goto_block  (9)

	INT  shift 29
	.  error

	iterate_int  goto 30


state 19
	stmt : WHILE . adresse gen_test DO goto_block  (10)
	adresse : .  (53)

	.  reduce 53

	adresse  goto 31


state 20
	stmt : IF . gen_test THEN block  (11)
	stmt : IF . gen_test THEN goto_inside_block ELSE adresse block  (12)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_NORTH  shift 40
	NOT_FACING_NORTH  shift 41
	FACING_EAST  shift 42
	NOT_FACING_EAST  shift 43
	FACING_SOUTH  shift 44
	NOT_FACING_SOUTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	gen_test  goto 50
	test  goto 51


state 21
	simple_stmt : ID .  (30)

	.  reduce 30


state 22
	prog : begin_programm lst_define adresse BEGIN_EXEC stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 52
	.  error


state 23
	stmts_opt : stmts .  (4)
	stmts : stmts . SEMI block  (6)
	stmts : stmts . SEMI  (7)

	SEMI  shift 53
	END_EXEC  reduce 4
	END  reduce 4


state 24
	stmts : block .  (5)

	.  reduce 5


state 25
	block : stmt .  (18)

	.  reduce 18


state 26
	stmt : simple_stmt .  (8)

	.  reduce 8


state 27
	define_new : adresse DEFINE_NEW_INSTRUCTION ID . AS block  (13)

	AS  shift 54
	.  error


state 28
	block : BEGIN stmts_opt . END  (17)

	END  shift 55
	.  error


state 29
	iterate_int : INT .  (52)

	.  reduce 52


state 30
	stmt : ITERATE iterate_int . TIMES goto_block  (9)

	TIMES  shift 56
	.  error


state 31
	stmt : WHILE adresse . gen_test DO goto_block  (10)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_NORTH  shift 40
	NOT_FACING_NORTH  shift 41
	FACING_EAST  shift 42
	NOT_FACING_EAST  shift 43
	FACING_SOUTH  shift 44
	NOT_FACING_SOUTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	gen_test  goto 57
	test  goto 51


state 32
	test : NEXT_TO_A_BEEPER .  (38)

	.  reduce 38


state 33
	test : FRONT_IS_CLEAR .  (31)

	.  reduce 31


state 34
	test : FRONT_IS_BLOCKED .  (32)

	.  reduce 32


state 35
	test : LEFT_IS_CLEAR .  (33)

	.  reduce 33


state 36
	test : LEFT_IS_BLOCKED .  (34)

	.  reduce 34


state 37
	test : RIGHT_IS_CLEAR .  (35)

	.  reduce 35


state 38
	test : RIGHT_IS_BLOCKED .  (36)

	.  reduce 36


state 39
	test : NOT_NEXT_TO_A_BEEPER .  (37)

	.  reduce 37


state 40
	test : FACING_NORTH .  (39)

	.  reduce 39


state 41
	test : NOT_FACING_NORTH .  (40)

	.  reduce 40


state 42
	test : FACING_EAST .  (41)

	.  reduce 41


state 43
	test : NOT_FACING_EAST .  (42)

	.  reduce 42


state 44
	test : FACING_SOUTH .  (43)

	.  reduce 43


state 45
	test : NOT_FACING_SOUTH .  (44)

	.  reduce 44


state 46
	test : FACING_WEST .  (45)

	.  reduce 45


state 47
	test : NOT_FACING_WEST .  (46)

	.  reduce 46


state 48
	test : ANY_BEEPERS_IN_BEEPER_BAG .  (47)

	.  reduce 47


state 49
	test : NO_BEEPERS_IN_BEEPER_BAG .  (48)

	.  reduce 48


state 50
	stmt : IF gen_test . THEN block  (11)
	stmt : IF gen_test . THEN goto_inside_block ELSE adresse block  (12)

	THEN  shift 58
	.  error


state 51
	gen_test : test .  (49)

	.  reduce 49


state 52
	prog : begin_programm lst_define adresse BEGIN_EXEC stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 59
	.  error


state 53
	stmts : stmts SEMI . block  (6)
	stmts : stmts SEMI .  (7)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END_EXEC  reduce 7
	SEMI  reduce 7
	END  reduce 7

	block  goto 60
	stmt  goto 25
	simple_stmt  goto 26


state 54
	define_new : adresse DEFINE_NEW_INSTRUCTION ID AS . block  (13)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 61
	stmt  goto 25
	simple_stmt  goto 26


state 55
	block : BEGIN stmts_opt END .  (17)

	.  reduce 17


state 56
	stmt : ITERATE iterate_int TIMES . goto_block  (9)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 62
	stmt  goto 25
	simple_stmt  goto 26
	goto_block  goto 63


state 57
	stmt : WHILE adresse gen_test . DO goto_block  (10)

	DO  shift 64
	.  error


state 58
	stmt : IF gen_test THEN . block  (11)
	stmt : IF gen_test THEN . goto_inside_block ELSE adresse block  (12)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 65
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 66
	WHILE  shift 67
	IF  shift 68
	ID  shift 21
	.  error

	block  goto 69
	stmt  goto 25
	simple_stmt  goto 70
	goto_inside_block  goto 71
	inside_block  goto 72
	inside_stmt  goto 73


state 59
	prog : begin_programm lst_define adresse BEGIN_EXEC stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 60
	stmts : stmts SEMI block .  (6)

	.  reduce 6


state 61
	define_new : adresse DEFINE_NEW_INSTRUCTION ID AS block .  (13)

	.  reduce 13


state 62
	goto_block : block .  (50)

	.  reduce 50


state 63
	stmt : ITERATE iterate_int TIMES goto_block .  (9)

	.  reduce 9


state 64
	stmt : WHILE adresse gen_test DO . goto_block  (10)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 62
	stmt  goto 25
	simple_stmt  goto 26
	goto_block  goto 74


state 65
	block : BEGIN . stmts_opt END  (17)
	inside_block : BEGIN . stmts_opt END  (19)
	stmts_opt : .  (3)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END  reduce 3

	stmts_opt  goto 75
	stmts  goto 23
	block  goto 24
	stmt  goto 25
	simple_stmt  goto 26


state 66
	stmt : ITERATE . iterate_int TIMES goto_block  (9)
	inside_stmt : ITERATE . iterate_int TIMES goto_inside_block  (24)

	INT  shift 29
	.  error

	iterate_int  goto 76


state 67
	stmt : WHILE . adresse gen_test DO goto_block  (10)
	inside_stmt : WHILE . adresse gen_test DO goto_inside_block  (23)
	adresse : .  (53)

	.  reduce 53

	adresse  goto 77


state 68
	stmt : IF . gen_test THEN block  (11)
	stmt : IF . gen_test THEN goto_inside_block ELSE adresse block  (12)
	inside_stmt : IF . gen_test THEN goto_inside_block ELSE adresse inside_block  (22)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_NORTH  shift 40
	NOT_FACING_NORTH  shift 41
	FACING_EAST  shift 42
	NOT_FACING_EAST  shift 43
	FACING_SOUTH  shift 44
	NOT_FACING_SOUTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	gen_test  goto 78
	test  goto 51


state 69
	stmt : IF gen_test THEN block .  (11)

	.  reduce 11


state 70
	stmt : simple_stmt .  (8)
	inside_stmt : simple_stmt .  (21)

	BEGIN_EXEC  reduce 8
	END_EXEC  reduce 8
	SEMI  reduce 8
	END  reduce 8
	DEFINE_NEW_INSTRUCTION  reduce 8
	ELSE  reduce 21


state 71
	stmt : IF gen_test THEN goto_inside_block . ELSE adresse block  (12)

	ELSE  shift 79
	.  error


state 72
	goto_inside_block : inside_block .  (51)

	.  reduce 51


state 73
	inside_block : inside_stmt .  (20)

	.  reduce 20


state 74
	stmt : WHILE adresse gen_test DO goto_block .  (10)

	.  reduce 10


state 75
	block : BEGIN stmts_opt . END  (17)
	inside_block : BEGIN stmts_opt . END  (19)

	END  shift 80
	.  error


state 76
	stmt : ITERATE iterate_int . TIMES goto_block  (9)
	inside_stmt : ITERATE iterate_int . TIMES goto_inside_block  (24)

	TIMES  shift 81
	.  error


state 77
	stmt : WHILE adresse . gen_test DO goto_block  (10)
	inside_stmt : WHILE adresse . gen_test DO goto_inside_block  (23)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_NORTH  shift 40
	NOT_FACING_NORTH  shift 41
	FACING_EAST  shift 42
	NOT_FACING_EAST  shift 43
	FACING_SOUTH  shift 44
	NOT_FACING_SOUTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	gen_test  goto 82
	test  goto 51


state 78
	stmt : IF gen_test . THEN block  (11)
	stmt : IF gen_test . THEN goto_inside_block ELSE adresse block  (12)
	inside_stmt : IF gen_test . THEN goto_inside_block ELSE adresse inside_block  (22)

	THEN  shift 83
	.  error


state 79
	stmt : IF gen_test THEN goto_inside_block ELSE . adresse block  (12)
	adresse : .  (53)

	.  reduce 53

	adresse  goto 84


state 80
	block : BEGIN stmts_opt END .  (17)
	inside_block : BEGIN stmts_opt END .  (19)

	BEGIN_EXEC  reduce 17
	END_EXEC  reduce 17
	SEMI  reduce 17
	END  reduce 17
	DEFINE_NEW_INSTRUCTION  reduce 17
	ELSE  reduce 19


state 81
	stmt : ITERATE iterate_int TIMES . goto_block  (9)
	inside_stmt : ITERATE iterate_int TIMES . goto_inside_block  (24)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 65
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 66
	WHILE  shift 67
	IF  shift 68
	ID  shift 21
	.  error

	block  goto 62
	stmt  goto 25
	simple_stmt  goto 70
	goto_block  goto 63
	goto_inside_block  goto 85
	inside_block  goto 72
	inside_stmt  goto 73


state 82
	stmt : WHILE adresse gen_test . DO goto_block  (10)
	inside_stmt : WHILE adresse gen_test . DO goto_inside_block  (23)

	DO  shift 86
	.  error


state 83
	stmt : IF gen_test THEN . block  (11)
	stmt : IF gen_test THEN . goto_inside_block ELSE adresse block  (12)
	inside_stmt : IF gen_test THEN . goto_inside_block ELSE adresse inside_block  (22)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 65
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 66
	WHILE  shift 67
	IF  shift 68
	ID  shift 21
	.  error

	block  goto 69
	stmt  goto 25
	simple_stmt  goto 70
	goto_inside_block  goto 87
	inside_block  goto 72
	inside_stmt  goto 73


state 84
	stmt : IF gen_test THEN goto_inside_block ELSE adresse . block  (12)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 88
	stmt  goto 25
	simple_stmt  goto 26


state 85
	inside_stmt : ITERATE iterate_int TIMES goto_inside_block .  (24)

	.  reduce 24


state 86
	stmt : WHILE adresse gen_test DO . goto_block  (10)
	inside_stmt : WHILE adresse gen_test DO . goto_inside_block  (23)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 65
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 66
	WHILE  shift 67
	IF  shift 68
	ID  shift 21
	.  error

	block  goto 62
	stmt  goto 25
	simple_stmt  goto 70
	goto_block  goto 74
	goto_inside_block  goto 89
	inside_block  goto 72
	inside_stmt  goto 73


state 87
	stmt : IF gen_test THEN goto_inside_block . ELSE adresse block  (12)
	inside_stmt : IF gen_test THEN goto_inside_block . ELSE adresse inside_block  (22)

	ELSE  shift 90
	.  error


state 88
	stmt : IF gen_test THEN goto_inside_block ELSE adresse block .  (12)

	.  reduce 12


state 89
	inside_stmt : WHILE adresse gen_test DO goto_inside_block .  (23)

	.  reduce 23


state 90
	stmt : IF gen_test THEN goto_inside_block ELSE . adresse block  (12)
	inside_stmt : IF gen_test THEN goto_inside_block ELSE . adresse inside_block  (22)
	adresse : .  (53)

	.  reduce 53

	adresse  goto 91


state 91
	stmt : IF gen_test THEN goto_inside_block ELSE adresse . block  (12)
	inside_stmt : IF gen_test THEN goto_inside_block ELSE adresse . inside_block  (22)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 65
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 66
	WHILE  shift 67
	IF  shift 68
	ID  shift 21
	.  error

	block  goto 88
	stmt  goto 25
	simple_stmt  goto 70
	inside_block  goto 92
	inside_stmt  goto 73


state 92
	inside_stmt : IF gen_test THEN goto_inside_block ELSE adresse inside_block .  (22)

	.  reduce 22


44 terminals, 19 nonterminals
55 grammar rules, 93 states
