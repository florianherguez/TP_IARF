   0  $accept : %entry% $end

   1  prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC END_PROG

   2  stmts_opt :
   3            | stmts

   4  stmts : block
   5        | stmts SEMI block
   6        | stmts SEMI

   7  stmt : simple_stmt
   8       | ITERATE iterate_test TIMES block
   9       | WHILE while_test DO block
  10       | IF if_test THEN block

  11  iterate_test : INT

  12  while_test : test

  13  if_test : test

  14  simple_stmt : TURN_LEFT
  15              | TURN_OFF
  16              | MOVE
  17              | PICK_BEEPER
  18              | PUT_BEEPER
  19              | NEXT_TO_A_BEEPER

  20  define_new : DEFINE_NEW_INSTRUCTION ID AS stmts_opt

  21  block : BEGIN stmts_opt END
  22        | stmt

  23  test : FRONT_IS_CLEAR
  24       | FRONT_IS_BLOCKED
  25       | LEFT_IS_CLEAR
  26       | LEFT_IS_BLOCKED
  27       | RIGHT_IS_CLEAR
  28       | RIGHT_IS_BLOCKED
  29       | NOT_NEXT_TO_A_BEEPER
  30       | NEXT_TO_A_BEEPER
  31       | FACING_NORTH
  32       | NOT_FACING_NORTH
  33       | FACING_EAST
  34       | NOT_FACING_EAST
  35       | FACING_SOUTH
  36       | NOT_FACING_SOUTH
  37       | FACING_WEST
  38       | NOT_FACING_WEST
  39       | ANY_BEEPERS_IN_BEEPER_BAG
  40       | NO_BEEPERS_IN_BEEPER_BAG

  41  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (41)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	prog : BEGIN_PROG . BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)

	BEGIN_EXEC  shift 5
	.  error


state 4
	%entry% : '\001' prog .  (41)

	.  reduce 41


state 5
	prog : BEGIN_PROG BEGIN_EXEC . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (2)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	END_EXEC  reduce 2

	stmts_opt  goto 16
	stmts  goto 17
	block  goto 18
	stmt  goto 19
	simple_stmt  goto 20


state 6
	simple_stmt : MOVE .  (16)

	.  reduce 16


state 7
	simple_stmt : TURN_LEFT .  (14)

	.  reduce 14


state 8
	simple_stmt : TURN_OFF .  (15)

	.  reduce 15


state 9
	block : BEGIN . stmts_opt END  (21)
	stmts_opt : .  (2)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	END  reduce 2

	stmts_opt  goto 21
	stmts  goto 17
	block  goto 18
	stmt  goto 19
	simple_stmt  goto 20


state 10
	simple_stmt : PICK_BEEPER .  (17)

	.  reduce 17


state 11
	simple_stmt : PUT_BEEPER .  (18)

	.  reduce 18


state 12
	simple_stmt : NEXT_TO_A_BEEPER .  (19)

	.  reduce 19


state 13
	stmt : ITERATE . iterate_test TIMES block  (8)

	INT  shift 22
	.  error

	iterate_test  goto 23


state 14
	stmt : WHILE . while_test DO block  (9)

	NEXT_TO_A_BEEPER  shift 24
	FRONT_IS_CLEAR  shift 25
	FRONT_IS_BLOCKED  shift 26
	LEFT_IS_CLEAR  shift 27
	LEFT_IS_BLOCKED  shift 28
	RIGHT_IS_CLEAR  shift 29
	RIGHT_IS_BLOCKED  shift 30
	NOT_NEXT_TO_A_BEEPER  shift 31
	FACING_NORTH  shift 32
	NOT_FACING_NORTH  shift 33
	FACING_EAST  shift 34
	NOT_FACING_EAST  shift 35
	FACING_SOUTH  shift 36
	NOT_FACING_SOUTH  shift 37
	FACING_WEST  shift 38
	NOT_FACING_WEST  shift 39
	ANY_BEEPERS_IN_BEEPER_BAG  shift 40
	NO_BEEPERS_IN_BEEPER_BAG  shift 41
	.  error

	while_test  goto 42
	test  goto 43


state 15
	stmt : IF . if_test THEN block  (10)

	NEXT_TO_A_BEEPER  shift 24
	FRONT_IS_CLEAR  shift 25
	FRONT_IS_BLOCKED  shift 26
	LEFT_IS_CLEAR  shift 27
	LEFT_IS_BLOCKED  shift 28
	RIGHT_IS_CLEAR  shift 29
	RIGHT_IS_BLOCKED  shift 30
	NOT_NEXT_TO_A_BEEPER  shift 31
	FACING_NORTH  shift 32
	NOT_FACING_NORTH  shift 33
	FACING_EAST  shift 34
	NOT_FACING_EAST  shift 35
	FACING_SOUTH  shift 36
	NOT_FACING_SOUTH  shift 37
	FACING_WEST  shift 38
	NOT_FACING_WEST  shift 39
	ANY_BEEPERS_IN_BEEPER_BAG  shift 40
	NO_BEEPERS_IN_BEEPER_BAG  shift 41
	.  error

	if_test  goto 44
	test  goto 45


state 16
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 46
	.  error


state 17
	stmts_opt : stmts .  (3)
	stmts : stmts . SEMI block  (5)
	stmts : stmts . SEMI  (6)

	SEMI  shift 47
	END_EXEC  reduce 3
	END  reduce 3


state 18
	stmts : block .  (4)

	.  reduce 4


state 19
	block : stmt .  (22)

	.  reduce 22


state 20
	stmt : simple_stmt .  (7)

	.  reduce 7


state 21
	block : BEGIN stmts_opt . END  (21)

	END  shift 48
	.  error


state 22
	iterate_test : INT .  (11)

	.  reduce 11


state 23
	stmt : ITERATE iterate_test . TIMES block  (8)

	TIMES  shift 49
	.  error


state 24
	test : NEXT_TO_A_BEEPER .  (30)

	.  reduce 30


state 25
	test : FRONT_IS_CLEAR .  (23)

	.  reduce 23


state 26
	test : FRONT_IS_BLOCKED .  (24)

	.  reduce 24


state 27
	test : LEFT_IS_CLEAR .  (25)

	.  reduce 25


state 28
	test : LEFT_IS_BLOCKED .  (26)

	.  reduce 26


state 29
	test : RIGHT_IS_CLEAR .  (27)

	.  reduce 27


state 30
	test : RIGHT_IS_BLOCKED .  (28)

	.  reduce 28


state 31
	test : NOT_NEXT_TO_A_BEEPER .  (29)

	.  reduce 29


state 32
	test : FACING_NORTH .  (31)

	.  reduce 31


state 33
	test : NOT_FACING_NORTH .  (32)

	.  reduce 32


state 34
	test : FACING_EAST .  (33)

	.  reduce 33


state 35
	test : NOT_FACING_EAST .  (34)

	.  reduce 34


state 36
	test : FACING_SOUTH .  (35)

	.  reduce 35


state 37
	test : NOT_FACING_SOUTH .  (36)

	.  reduce 36


state 38
	test : FACING_WEST .  (37)

	.  reduce 37


state 39
	test : NOT_FACING_WEST .  (38)

	.  reduce 38


state 40
	test : ANY_BEEPERS_IN_BEEPER_BAG .  (39)

	.  reduce 39


state 41
	test : NO_BEEPERS_IN_BEEPER_BAG .  (40)

	.  reduce 40


state 42
	stmt : WHILE while_test . DO block  (9)

	DO  shift 50
	.  error


state 43
	while_test : test .  (12)

	.  reduce 12


state 44
	stmt : IF if_test . THEN block  (10)

	THEN  shift 51
	.  error


state 45
	if_test : test .  (13)

	.  reduce 13


state 46
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 52
	.  error


state 47
	stmts : stmts SEMI . block  (5)
	stmts : stmts SEMI .  (6)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	END_EXEC  reduce 6
	SEMI  reduce 6
	END  reduce 6

	block  goto 53
	stmt  goto 19
	simple_stmt  goto 20


state 48
	block : BEGIN stmts_opt END .  (21)

	.  reduce 21


state 49
	stmt : ITERATE iterate_test TIMES . block  (8)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	.  error

	block  goto 54
	stmt  goto 19
	simple_stmt  goto 20


state 50
	stmt : WHILE while_test DO . block  (9)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	.  error

	block  goto 55
	stmt  goto 19
	simple_stmt  goto 20


state 51
	stmt : IF if_test THEN . block  (10)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	BEGIN  shift 9
	PICK_BEEPER  shift 10
	PUT_BEEPER  shift 11
	NEXT_TO_A_BEEPER  shift 12
	ITERATE  shift 13
	WHILE  shift 14
	IF  shift 15
	.  error

	block  goto 56
	stmt  goto 19
	simple_stmt  goto 20


state 52
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 53
	stmts : stmts SEMI block .  (5)

	.  reduce 5


state 54
	stmt : ITERATE iterate_test TIMES block .  (8)

	.  reduce 8


state 55
	stmt : WHILE while_test DO block .  (9)

	.  reduce 9


state 56
	stmt : IF if_test THEN block .  (10)

	.  reduce 10


Rules never reduced:
	define_new : DEFINE_NEW_INSTRUCTION ID AS stmts_opt  (20)


43 terminals, 13 nonterminals
42 grammar rules, 57 states
