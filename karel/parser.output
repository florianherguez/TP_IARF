   0  $accept : %entry% $end

   1  prog : begin_programm lst_define adress BEGIN_EXEC stmts_opt END_EXEC END_PROG

   2  begin_programm : BEGIN_PROG

   3  stmts_opt :
   4            | stmts

   5  stmts : block
   6        | stmts SEMI block
   7        | stmts SEMI

   8  stmt : simple_stmt
   9       | ITERATE iterate_int TIMES block
  10       | WHILE adress if_test DO goto_block
  11       | IF if_test THEN block
  12       | IF if_test THEN closed_block adress_else ELSE block

  13  closed_block : simple_stmt
  14               | IF if_test THEN closed_block adress_else ELSE closed_block
  15               | WHILE adress if_test DO closed_block

  16  define_new : adress DEFINE_NEW_INSTRUCTION ID AS block

  17  lst_define :
  18             | lst_define define_new
  19             | lst_define define_new SEMI

  20  block : BEGIN stmts_opt END
  21        | stmt

  22  simple_stmt : TURN_LEFT
  23              | TURN_OFF
  24              | MOVE
  25              | PICK_BEEPER
  26              | PUT_BEEPER
  27              | ID

  28  test : FRONT_IS_CLEAR
  29       | FRONT_IS_BLOCKED
  30       | LEFT_IS_CLEAR
  31       | LEFT_IS_BLOCKED
  32       | RIGHT_IS_CLEAR
  33       | RIGHT_IS_BLOCKED
  34       | NOT_NEXT_TO_A_BEEPER
  35       | NEXT_TO_A_BEEPER
  36       | FACING_EAST
  37       | NOT_FACING_EAST
  38       | FACING_SOUTH
  39       | NOT_FACING_SOUTH
  40       | FACING_NORTH
  41       | NOT_FACING_NORTH
  42       | FACING_WEST
  43       | NOT_FACING_WEST
  44       | ANY_BEEPERS_IN_BEEPER_BAG
  45       | NO_BEEPERS_IN_BEEPER_BAG

  46  if_test : test

  47  goto_block : block

  48  iterate_int : INT

  49  adress :

  50  adress_else :

  51  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (51)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4
	begin_programm  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	begin_programm : BEGIN_PROG .  (2)

	.  reduce 2


state 4
	%entry% : '\001' prog .  (51)

	.  reduce 51


state 5
	prog : begin_programm . lst_define adress BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	lst_define : .  (17)

	.  reduce 17

	lst_define  goto 6


state 6
	prog : begin_programm lst_define . adress BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	lst_define : lst_define . define_new  (18)
	lst_define : lst_define . define_new SEMI  (19)
	adress : .  (49)

	.  reduce 49

	adress  goto 7
	define_new  goto 8


state 7
	prog : begin_programm lst_define adress . BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)
	define_new : adress . DEFINE_NEW_INSTRUCTION ID AS block  (16)

	BEGIN_EXEC  shift 9
	DEFINE_NEW_INSTRUCTION  shift 10
	.  error


state 8
	lst_define : lst_define define_new .  (18)
	lst_define : lst_define define_new . SEMI  (19)

	SEMI  shift 11
	BEGIN_EXEC  reduce 18
	DEFINE_NEW_INSTRUCTION  reduce 18


state 9
	prog : begin_programm lst_define adress BEGIN_EXEC . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (3)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END_EXEC  reduce 3

	stmts_opt  goto 22
	stmts  goto 23
	block  goto 24
	stmt  goto 25
	simple_stmt  goto 26


state 10
	define_new : adress DEFINE_NEW_INSTRUCTION . ID AS block  (16)

	ID  shift 27
	.  error


state 11
	lst_define : lst_define define_new SEMI .  (19)

	.  reduce 19


state 12
	simple_stmt : MOVE .  (24)

	.  reduce 24


state 13
	simple_stmt : TURN_LEFT .  (22)

	.  reduce 22


state 14
	simple_stmt : TURN_OFF .  (23)

	.  reduce 23


state 15
	block : BEGIN . stmts_opt END  (20)
	stmts_opt : .  (3)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END  reduce 3

	stmts_opt  goto 28
	stmts  goto 23
	block  goto 24
	stmt  goto 25
	simple_stmt  goto 26


state 16
	simple_stmt : PICK_BEEPER .  (25)

	.  reduce 25


state 17
	simple_stmt : PUT_BEEPER .  (26)

	.  reduce 26


state 18
	stmt : ITERATE . iterate_int TIMES block  (9)

	INT  shift 29
	.  error

	iterate_int  goto 30


state 19
	stmt : WHILE . adress if_test DO goto_block  (10)
	adress : .  (49)

	.  reduce 49

	adress  goto 31


state 20
	stmt : IF . if_test THEN block  (11)
	stmt : IF . if_test THEN closed_block adress_else ELSE block  (12)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_EAST  shift 40
	NOT_FACING_EAST  shift 41
	FACING_SOUTH  shift 42
	NOT_FACING_SOUTH  shift 43
	FACING_NORTH  shift 44
	NOT_FACING_NORTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	if_test  goto 50
	test  goto 51


state 21
	simple_stmt : ID .  (27)

	.  reduce 27


state 22
	prog : begin_programm lst_define adress BEGIN_EXEC stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 52
	.  error


state 23
	stmts_opt : stmts .  (4)
	stmts : stmts . SEMI block  (6)
	stmts : stmts . SEMI  (7)

	SEMI  shift 53
	END_EXEC  reduce 4
	END  reduce 4


state 24
	stmts : block .  (5)

	.  reduce 5


state 25
	block : stmt .  (21)

	.  reduce 21


state 26
	stmt : simple_stmt .  (8)

	.  reduce 8


state 27
	define_new : adress DEFINE_NEW_INSTRUCTION ID . AS block  (16)

	AS  shift 54
	.  error


state 28
	block : BEGIN stmts_opt . END  (20)

	END  shift 55
	.  error


state 29
	iterate_int : INT .  (48)

	.  reduce 48


state 30
	stmt : ITERATE iterate_int . TIMES block  (9)

	TIMES  shift 56
	.  error


state 31
	stmt : WHILE adress . if_test DO goto_block  (10)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_EAST  shift 40
	NOT_FACING_EAST  shift 41
	FACING_SOUTH  shift 42
	NOT_FACING_SOUTH  shift 43
	FACING_NORTH  shift 44
	NOT_FACING_NORTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	if_test  goto 57
	test  goto 51


state 32
	test : NEXT_TO_A_BEEPER .  (35)

	.  reduce 35


state 33
	test : FRONT_IS_CLEAR .  (28)

	.  reduce 28


state 34
	test : FRONT_IS_BLOCKED .  (29)

	.  reduce 29


state 35
	test : LEFT_IS_CLEAR .  (30)

	.  reduce 30


state 36
	test : LEFT_IS_BLOCKED .  (31)

	.  reduce 31


state 37
	test : RIGHT_IS_CLEAR .  (32)

	.  reduce 32


state 38
	test : RIGHT_IS_BLOCKED .  (33)

	.  reduce 33


state 39
	test : NOT_NEXT_TO_A_BEEPER .  (34)

	.  reduce 34


state 40
	test : FACING_EAST .  (36)

	.  reduce 36


state 41
	test : NOT_FACING_EAST .  (37)

	.  reduce 37


state 42
	test : FACING_SOUTH .  (38)

	.  reduce 38


state 43
	test : NOT_FACING_SOUTH .  (39)

	.  reduce 39


state 44
	test : FACING_NORTH .  (40)

	.  reduce 40


state 45
	test : NOT_FACING_NORTH .  (41)

	.  reduce 41


state 46
	test : FACING_WEST .  (42)

	.  reduce 42


state 47
	test : NOT_FACING_WEST .  (43)

	.  reduce 43


state 48
	test : ANY_BEEPERS_IN_BEEPER_BAG .  (44)

	.  reduce 44


state 49
	test : NO_BEEPERS_IN_BEEPER_BAG .  (45)

	.  reduce 45


state 50
	stmt : IF if_test . THEN block  (11)
	stmt : IF if_test . THEN closed_block adress_else ELSE block  (12)

	THEN  shift 58
	.  error


state 51
	if_test : test .  (46)

	.  reduce 46


state 52
	prog : begin_programm lst_define adress BEGIN_EXEC stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 59
	.  error


state 53
	stmts : stmts SEMI . block  (6)
	stmts : stmts SEMI .  (7)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	END_EXEC  reduce 7
	END  reduce 7
	SEMI  reduce 7

	block  goto 60
	stmt  goto 25
	simple_stmt  goto 26


state 54
	define_new : adress DEFINE_NEW_INSTRUCTION ID AS . block  (16)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 61
	stmt  goto 25
	simple_stmt  goto 26


state 55
	block : BEGIN stmts_opt END .  (20)

	.  reduce 20


state 56
	stmt : ITERATE iterate_int TIMES . block  (9)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 62
	stmt  goto 25
	simple_stmt  goto 26


state 57
	stmt : WHILE adress if_test . DO goto_block  (10)

	DO  shift 63
	.  error


state 58
	stmt : IF if_test THEN . block  (11)
	stmt : IF if_test THEN . closed_block adress_else ELSE block  (12)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 64
	IF  shift 65
	ID  shift 21
	.  error

	block  goto 66
	stmt  goto 25
	simple_stmt  goto 67
	closed_block  goto 68


state 59
	prog : begin_programm lst_define adress BEGIN_EXEC stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 60
	stmts : stmts SEMI block .  (6)

	.  reduce 6


state 61
	define_new : adress DEFINE_NEW_INSTRUCTION ID AS block .  (16)

	.  reduce 16


state 62
	stmt : ITERATE iterate_int TIMES block .  (9)

	.  reduce 9


state 63
	stmt : WHILE adress if_test DO . goto_block  (10)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 69
	stmt  goto 25
	simple_stmt  goto 26
	goto_block  goto 70


state 64
	stmt : WHILE . adress if_test DO goto_block  (10)
	closed_block : WHILE . adress if_test DO closed_block  (15)
	adress : .  (49)

	.  reduce 49

	adress  goto 71


state 65
	stmt : IF . if_test THEN block  (11)
	stmt : IF . if_test THEN closed_block adress_else ELSE block  (12)
	closed_block : IF . if_test THEN closed_block adress_else ELSE closed_block  (14)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_EAST  shift 40
	NOT_FACING_EAST  shift 41
	FACING_SOUTH  shift 42
	NOT_FACING_SOUTH  shift 43
	FACING_NORTH  shift 44
	NOT_FACING_NORTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	if_test  goto 72
	test  goto 51


state 66
	stmt : IF if_test THEN block .  (11)

	.  reduce 11


state 67
	stmt : simple_stmt .  (8)
	closed_block : simple_stmt .  (13)

	BEGIN_EXEC  reduce 8
	END_EXEC  reduce 8
	END  reduce 8
	ELSE  reduce 13
	DEFINE_NEW_INSTRUCTION  reduce 8
	SEMI  reduce 8


state 68
	stmt : IF if_test THEN closed_block . adress_else ELSE block  (12)
	adress_else : .  (50)

	.  reduce 50

	adress_else  goto 73


state 69
	goto_block : block .  (47)

	.  reduce 47


state 70
	stmt : WHILE adress if_test DO goto_block .  (10)

	.  reduce 10


state 71
	stmt : WHILE adress . if_test DO goto_block  (10)
	closed_block : WHILE adress . if_test DO closed_block  (15)

	NEXT_TO_A_BEEPER  shift 32
	FRONT_IS_CLEAR  shift 33
	FRONT_IS_BLOCKED  shift 34
	LEFT_IS_CLEAR  shift 35
	LEFT_IS_BLOCKED  shift 36
	RIGHT_IS_CLEAR  shift 37
	RIGHT_IS_BLOCKED  shift 38
	NOT_NEXT_TO_A_BEEPER  shift 39
	FACING_EAST  shift 40
	NOT_FACING_EAST  shift 41
	FACING_SOUTH  shift 42
	NOT_FACING_SOUTH  shift 43
	FACING_NORTH  shift 44
	NOT_FACING_NORTH  shift 45
	FACING_WEST  shift 46
	NOT_FACING_WEST  shift 47
	ANY_BEEPERS_IN_BEEPER_BAG  shift 48
	NO_BEEPERS_IN_BEEPER_BAG  shift 49
	.  error

	if_test  goto 74
	test  goto 51


state 72
	stmt : IF if_test . THEN block  (11)
	stmt : IF if_test . THEN closed_block adress_else ELSE block  (12)
	closed_block : IF if_test . THEN closed_block adress_else ELSE closed_block  (14)

	THEN  shift 75
	.  error


state 73
	stmt : IF if_test THEN closed_block adress_else . ELSE block  (12)

	ELSE  shift 76
	.  error


state 74
	stmt : WHILE adress if_test . DO goto_block  (10)
	closed_block : WHILE adress if_test . DO closed_block  (15)

	DO  shift 77
	.  error


state 75
	stmt : IF if_test THEN . block  (11)
	stmt : IF if_test THEN . closed_block adress_else ELSE block  (12)
	closed_block : IF if_test THEN . closed_block adress_else ELSE closed_block  (14)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 64
	IF  shift 65
	ID  shift 21
	.  error

	block  goto 66
	stmt  goto 25
	simple_stmt  goto 67
	closed_block  goto 78


state 76
	stmt : IF if_test THEN closed_block adress_else ELSE . block  (12)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 19
	IF  shift 20
	ID  shift 21
	.  error

	block  goto 79
	stmt  goto 25
	simple_stmt  goto 26


state 77
	stmt : WHILE adress if_test DO . goto_block  (10)
	closed_block : WHILE adress if_test DO . closed_block  (15)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 64
	IF  shift 65
	ID  shift 21
	.  error

	block  goto 69
	stmt  goto 25
	simple_stmt  goto 67
	goto_block  goto 70
	closed_block  goto 80


state 78
	stmt : IF if_test THEN closed_block . adress_else ELSE block  (12)
	closed_block : IF if_test THEN closed_block . adress_else ELSE closed_block  (14)
	adress_else : .  (50)

	.  reduce 50

	adress_else  goto 81


state 79
	stmt : IF if_test THEN closed_block adress_else ELSE block .  (12)

	.  reduce 12


state 80
	closed_block : WHILE adress if_test DO closed_block .  (15)

	.  reduce 15


state 81
	stmt : IF if_test THEN closed_block adress_else . ELSE block  (12)
	closed_block : IF if_test THEN closed_block adress_else . ELSE closed_block  (14)

	ELSE  shift 82
	.  error


state 82
	stmt : IF if_test THEN closed_block adress_else ELSE . block  (12)
	closed_block : IF if_test THEN closed_block adress_else ELSE . closed_block  (14)

	MOVE  shift 12
	TURN_LEFT  shift 13
	TURN_OFF  shift 14
	BEGIN  shift 15
	PICK_BEEPER  shift 16
	PUT_BEEPER  shift 17
	ITERATE  shift 18
	WHILE  shift 64
	IF  shift 65
	ID  shift 21
	.  error

	block  goto 79
	stmt  goto 25
	simple_stmt  goto 67
	closed_block  goto 83


state 83
	closed_block : IF if_test THEN closed_block adress_else ELSE closed_block .  (14)

	.  reduce 14


44 terminals, 18 nonterminals
52 grammar rules, 84 states
